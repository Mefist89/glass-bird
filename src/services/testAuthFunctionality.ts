import { createClient } from '@supabase/supabase-js';

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —á—Ç–æ –∏ –≤ authService.ts
const SUPABASE_URL = 'https://vdyujjhszhxjperzsuuy.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZkeXVqamhzemh4anBlcnpzdXV5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjAwNTUyOTQsImV4cCI6MjA3NTYzMTI5NH0.qBjtFVgAG0arg0jYSpwgizK5CnNXRHH4S4TtFpLgYrU';

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export const testAuthFunctionality = async () => {
  console.log('=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ ===');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–∞–±–ª–∏—Ü–µ profiles
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ç–∞–±–ª–∏—Ü–µ profiles...');
    const { data: profilesData, error: profilesError } = await supabase
      .from('profiles')
      .select('id, email, name, role')
      .limit(1);

    if (profilesError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ —Ç–∞–±–ª–∏—Ü–µ profiles:', profilesError.message);
      return { success: false, error: profilesError.message };
    }

    console.log('‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ profiles –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω');
    if (profilesData && profilesData.length > 0) {
      console.log('   –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏ –≤ profiles:', profilesData[0]);
    } else {
      console.log('   –¢–∞–±–ª–∏—Ü–∞ profiles –ø—É—Å—Ç–∞');
    }

    // 2. –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã profiles
    console.log('\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã profiles...');
    const { data: structureData, error: structureError } = await supabase
      .from('profiles')
      .select('*')
      .limit(1);

    if (structureError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã profiles:', structureError.message);
      return { success: false, error: structureError.message };
    }

    if (structureData && structureData.length > 0) {
      const sampleRecord = structureData[0];
      console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã profiles –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
      console.log('   –ü–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ:', Object.keys(sampleRecord));
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
      const requiredFields = ['id', 'email', 'name', 'role'];
      const missingFields = requiredFields.filter(field => !(field in sampleRecord));
      
      if (missingFields.length > 0) {
        console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è:', missingFields.join(', '));
        return { success: false, error: `–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è: ${missingFields.join(', ')}` };
      }
      
      console.log('‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    } else {
      console.log('‚ÑπÔ∏è –¢–∞–±–ª–∏—Ü–∞ profiles –ø—É—Å—Ç–∞, –Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
    }

    // 3. –ü—Ä–æ–≤–µ—Ä–∏–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è upsert-–æ–ø–µ—Ä–∞—Ü–∏–π
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ upsert-–æ–ø–µ—Ä–∞—Ü–∏–π...');
    const testId = '00000000-0000-0000-0000-00000000'; // –¢–µ—Å—Ç–æ–≤—ã–π ID
    
    const { data: upsertData, error: upsertError } = await supabase
      .from('profiles')
      .upsert([{
        id: testId,
        email: 'test@example.com',
        name: 'Test User',
        role: 'student',
        updated_at: new Date().toISOString()
      }])
      .select()
      .single();

    if (upsertError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ upsert:', upsertError.message);
      console.log('   –≠—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã');
      return { success: false, error: upsertError.message };
    }

    console.log('‚úÖ Upsert-–æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    console.log('   –°–æ–∑–¥–∞–Ω–Ω–∞—è/–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å:', {
      id: upsertData.id,
      email: upsertData.email,
      name: upsertData.name,
      role: upsertData.role
    });

    // 4. –£–¥–∞–ª–∏–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
    console.log('\n4. –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏...');
    const { error: deleteError } = await supabase
      .from('profiles')
      .delete()
      .eq('id', testId);

    if (deleteError) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏:', deleteError.message);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞');
    }

    // 5. –ü—Ä–æ–≤–µ—Ä–∏–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ handle_new_user
    console.log('\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ handle_new_user...');
    const { data: functions, error: functionsError } = await supabase
      .rpc('get_function_by_name', { name: 'handle_new_user' })
      .select('*');

    if (functionsError) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ—É–Ω–∫—Ü–∏–∏ handle_new_user:', functionsError.message);
      console.log('   –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ —É –Ω–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º');
    } else {
      if (functions && functions.length > 0) {
        console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è handle_new_user —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      } else {
        console.log('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è handle_new_user –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      }
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã profiles –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
    console.log('‚úÖ –û–ø–µ—Ä–∞—Ü–∏–∏ –≤—Å—Ç–∞–≤–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    console.log('‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    
    return { success: true };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:', error);
    return { success: false, error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' };
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAuthFunctionality()
  .then(result => {
    console.log('\n=== –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ ===');
    if (result.success) {
      console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ');
    } else {
      console.log('‚ùå –ü—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:');
      console.log(`   - ${result.error}`);
      console.log('\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç final_fix_script.sql –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ Supabase Studio');
      console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ profiles –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É');
      console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É —Ñ—É–Ω–∫—Ü–∏–∏ handle_new_user –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞');
    }
  })
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:', error);
  });

export default supabase;